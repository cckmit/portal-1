# CREATE TABLE absence_reason (id INT AUTO_INCREMENT NOT NULL, ar_code VARCHAR(32) NOT NULL, ar_info VARCHAR(1000) NULL, old_id INT NULL, display_order INT NOT NULL, CONSTRAINT PK_ABSENCE_REASON PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
# CREATE TABLE admin_state (id INT NOT NULL, code VARCHAR(16) NOT NULL, CONSTRAINT PK_ADMIN_STATE PRIMARY KEY (id)) COMMENT='Административное состояние (locked/unlocked)' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE application (id BIGINT AUTO_INCREMENT NOT NULL, server_id BIGINT NOT NULL, name VARCHAR(128) NULL, comment MEDIUMTEXT NULL, paths VARCHAR(2048) NULL, dev_unit_id BIGINT NULL, CONSTRAINT PK_APPLICATION PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE attachment (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime NOT NULL, CREATOR BIGINT NOT NULL, AT_LABEL VARCHAR(1000) NULL, EXT_LINK VARCHAR(1000) NULL, DATA_MIMETYPE VARCHAR(128) NULL, DATA_SIZE BIGINT NULL, FILE_NAME VARCHAR(1000) NULL, CONSTRAINT PK_ATTACHMENT PRIMARY KEY (ID)) COMMENT='Вложения, которые используются на разных уровнях' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE audit (id BIGINT AUTO_INCREMENT NOT NULL, type INT NOT NULL, created datetime NOT NULL, creator BIGINT NOT NULL, entry_info MEDIUMTEXT NOT NULL, creator_shortname VARCHAR(128) NULL, creator_ip VARCHAR(32) NULL, CONSTRAINT PK_AUDIT PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE audit_type (id INT NOT NULL, code VARCHAR(32) NULL, info VARCHAR(128) NULL, CONSTRAINT PK_AUDIT_TYPE PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE auth_type (id INT NOT NULL, at_code VARCHAR(16) NOT NULL, at_info VARCHAR(500) NULL, CONSTRAINT PK_AUTH_TYPE PRIMARY KEY (id)) COMMENT='Тип авторизации клиентов портала (LDAP, персональный пароль,' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_attachment (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NOT NULL, ATT_ID BIGINT NOT NULL, CCOMMENT_ID BIGINT NULL, remote_id VARCHAR(64) NULL, CONSTRAINT PK_CASE_ATTACHMENT PRIMARY KEY (ID), UNIQUE (remote_id)) COMMENT='Список вложений CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_comment (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime DEFAULT NOW() NOT NULL, CLIENT_IP VARCHAR(32) NULL, CASE_ID BIGINT NOT NULL, AUTHOR_ID BIGINT NOT NULL, CSTATE_ID INT NULL, REPLY_TO BIGINT NULL, VROOM BIGINT NULL, COMMENT_TEXT MEDIUMTEXT NULL, OLD_ID BIGINT NULL, time_elapsed BIGINT NULL, cimp_level INT NULL, remote_id VARCHAR(64) NULL, remote_link_id BIGINT NULL, original_author_name VARCHAR(64) NULL, original_author_full_name VARCHAR(256) NULL, time_elapsed_type INT NULL, private_flag BIT(1) DEFAULT 0 NOT NULL, cmanager_id BIGINT NULL, CONSTRAINT PK_CASE_COMMENT PRIMARY KEY (ID)) COMMENT='Комментарии к CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_comment_reply (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NOT NULL, COMMENT_ID BIGINT NOT NULL, REPLY_ID BIGINT NOT NULL, CONSTRAINT PK_CASE_COMMENT_REPLY PRIMARY KEY (ID)) COMMENT='Список обратных ссылок для сборки ответов на определенный ко' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_doc_type (ID INT NOT NULL, DT_CODE VARCHAR(32) NOT NULL, DT_INFO VARCHAR(500) NULL, DT_LABEL VARCHAR(128) NULL, DisplayOrder INT NULL, CONSTRAINT PK_CASE_DOC_TYPE PRIMARY KEY (ID)) COMMENT='Типы документов для CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_document (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NOT NULL, CREATED datetime DEFAULT NOW() NOT NULL, DOC_TYPE INT NOT NULL, REVISION INT DEFAULT 1 NOT NULL, AUTHOR BIGINT NOT NULL, DOC_BODY MEDIUMTEXT NULL, old_id BIGINT NULL, CONSTRAINT PK_CASE_DOCUMENT PRIMARY KEY (ID)) COMMENT='Документы для Case' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_event (id BIGINT AUTO_INCREMENT NOT NULL, created datetime NOT NULL, case_id BIGINT NOT NULL, event_type INT NOT NULL, case_state INT NOT NULL, person_id BIGINT NULL, executor_id BIGINT NULL, work_time BIGINT NULL, est_time BIGINT NULL, attachment_id BIGINT NULL, comment_id BIGINT NULL, ref_case_id BIGINT NULL, EventData TEXT NULL, CONSTRAINT PK_CASE_EVENT PRIMARY KEY (id)) COMMENT='События для CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_event_type (ID INT AUTO_INCREMENT NOT NULL, EVENT_CODE VARCHAR(32) NOT NULL, EVENT_INFO VARCHAR(2000) NULL, CONSTRAINT PK_CASE_EVENT_TYPE PRIMARY KEY (ID)) COMMENT='Типы событий для Case' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_filter (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(256) NOT NULL, login_id BIGINT NOT NULL, params JSON NULL, type VARCHAR(32) DEFAULT 'CASE_OBJECTS' NOT NULL, CONSTRAINT PK_CASE_FILTER PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_link (id BIGINT AUTO_INCREMENT NOT NULL, case_id BIGINT NOT NULL, link_type VARCHAR(16) NOT NULL, remote_id TEXT NOT NULL, CONSTRAINT PK_CASE_LINK PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_location (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NULL, LOCATION_ID BIGINT NULL, CONSTRAINT PK_CASE_LOCATION PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_member (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NULL, MEMBER_ID BIGINT NULL, MEMBER_ROLE_ID INT NULL, CONSTRAINT PK_CASE_MEMBER PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_notifier (id BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NOT NULL, PERSON_ID BIGINT NOT NULL, CONSTRAINT PK_CASE_NOTIFIER PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_object (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_TYPE INT NOT NULL, CASENO BIGINT NOT NULL, CREATED datetime NOT NULL, MODIFIED datetime NULL, CASE_NAME VARCHAR(1024) NOT NULL, EXT_ID VARCHAR(32) NULL, info MEDIUMTEXT NULL, STATE INT NOT NULL, IMPORTANCE INT NULL, initiator BIGINT NULL, CREATOR BIGINT NULL, CREATOR_IP VARCHAR(32) NULL, MANAGER BIGINT NULL, KEYWORDS VARCHAR(500) NULL, ISLOCAL INT DEFAULT 0 NOT NULL, EMAILS VARCHAR(2000) NULL, creator_info VARCHAR(200) NULL, initiator_company BIGINT NULL, product_id BIGINT NULL, deleted INT DEFAULT 0 NOT NULL, private_flag INT DEFAULT 0 NOT NULL, ATTACHMENT_EXISTS TINYINT(3) DEFAULT 0 NOT NULL, EXT_APP VARCHAR(16) NULL, EXT_APP_ID VARCHAR(64) NULL, EXT_APP_DATA MEDIUMTEXT NULL, time_elapsed BIGINT DEFAULT 0 NULL, email_last_id BIGINT DEFAULT 0 NULL, platform_id BIGINT NULL, CONSTRAINT PK_CASE_OBJECT PRIMARY KEY (ID), UNIQUE (EXT_APP_ID)) COMMENT='Subj' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_object_tag (id BIGINT AUTO_INCREMENT NOT NULL, case_id BIGINT NOT NULL, tag_id BIGINT NOT NULL, CONSTRAINT PK_CASE_OBJECT_TAG PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_refs (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NOT NULL, CASE_REF BIGINT NOT NULL, CASE_STAGE BIGINT NULL, CONSTRAINT PK_CASE_REFS PRIMARY KEY (ID)) COMMENT='Кросс-ссылки CASE друг на друга' CHARACTER SET UTF8 COLLATE utf8_general_ci;
# CREATE TABLE case_stage (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime NOT NULL, STAGE_TYPE INT NOT NULL, CASE_ID BIGINT NOT NULL, CREATOR_ID BIGINT NOT NULL, STAGE_ORDER INT DEFAULT 1 NOT NULL, STAGE_NAME VARCHAR(1024) NULL, CONSTRAINT PK_CASE_STAGE PRIMARY KEY (ID)) COMMENT='Этапы для CASE. Каждый этап - это группа из CASE(Этап';
# CREATE TABLE case_stage_type (ID INT AUTO_INCREMENT NOT NULL, STAGE_TYPE VARCHAR(64) NOT NULL, CONSTRAINT PK_CASE_STAGE_TYPE PRIMARY KEY (ID)) COMMENT='Словарь возможных этапов для CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_state (ID INT AUTO_INCREMENT NOT NULL, STATE VARCHAR(32) NOT NULL, INFO VARCHAR(256) NULL, usage_in_companies INT DEFAULT 1 NULL, CONSTRAINT PK_CASE_STATE PRIMARY KEY (ID)) COMMENT='Пополняемый словарь возможных статусов для CASE. Словарь сод' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_state_matrix (ID INT AUTO_INCREMENT NOT NULL, CASE_TYPE INT NOT NULL, CASE_STATE INT NOT NULL, view_order INT NULL, OLD_ID INT NULL, OLD_CODE VARCHAR(32) NULL, info VARCHAR(500) NULL, CONSTRAINT PK_CASE_STATE_MATRIX PRIMARY KEY (ID)) COMMENT='матрица определяющая возможные наборы статусов для каждого т' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_state_to_company (id BIGINT AUTO_INCREMENT NOT NULL, state_id INT NULL, company_id BIGINT NULL, CONSTRAINT PK_CASE_STATE_TO_COMPANY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_state_workflow (id BIGINT NOT NULL, info VARCHAR(64) NULL, CONSTRAINT PK_CASE_STATE_WORKFLOW PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_state_workflow_link (id BIGINT AUTO_INCREMENT NOT NULL, workflow_id BIGINT NOT NULL, state_from INT NOT NULL, state_to INT NOT NULL, CONSTRAINT PK_CASE_STATE_WORKFLOW_LINK PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_tag (id BIGINT AUTO_INCREMENT NOT NULL, case_type INT NOT NULL, name VARCHAR(64) NOT NULL, color VARCHAR(9) NULL, company_id BIGINT NOT NULL, person_id BIGINT NULL, CONSTRAINT PK_CASE_TAG PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_task (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime NOT NULL, CASE_ID BIGINT NOT NULL, TASK_INFO TEXT NOT NULL, TIME_UNIT CHAR(1) DEFAULT 'D' NOT NULL COMMENT 'Основная единица времени для отображения', EST_PERSON_ID BIGINT NULL COMMENT 'Сотрудник, который выставил оценку по трудозатратам', EST_TIME BIGINT NULL COMMENT 'Оценочное время', STARTED datetime NULL COMMENT 'Дата и время начала работ над задачей, выставляется один раз', COMPLETED datetime NULL COMMENT 'Дата завершения задачи', WORKER_ID BIGINT NULL COMMENT 'Назначенный основной исполнитель задачи, может отсутствовать, используется только как информационный атрибут', WORKTIME BIGINT DEFAULT 0 NOT NULL COMMENT 'Полное время работы над задачей (аггрегированное значение)', remain_time BIGINT NULL, CONSTRAINT PK_CASE_TASK PRIMARY KEY (ID)) COMMENT='Линейный список задач по каждому CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_term (ID BIGINT AUTO_INCREMENT NOT NULL, CASE_ID BIGINT NOT NULL, CREATED datetime NOT NULL, CREATOR_ID BIGINT NOT NULL, TERM_TYPE INT NOT NULL, TORDER INT NOT NULL, END_TIME datetime NULL, TLABEL TEXT NULL, STAGE_ID BIGINT NULL, old_id BIGINT NULL, CONSTRAINT PK_CASE_TERM PRIMARY KEY (ID)) COMMENT='Различные сроки по Case (дедлайны)' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_term_type (ID INT AUTO_INCREMENT NOT NULL, TERM_CODE VARCHAR(32) NOT NULL, TERM_INFO VARCHAR(2000) NULL, CONSTRAINT PK_CASE_TERM_TYPE PRIMARY KEY (ID)) COMMENT='Типы сроков по Case' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_time_log (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime DEFAULT NOW() NOT NULL, CASE_ID BIGINT NOT NULL, PERSON_ID BIGINT NOT NULL COMMENT 'Сотрудник, для которого сформирована запись, это его учтенное время', WORK_TIME BIGINT NOT NULL COMMENT 'Учтенное время', INFO VARCHAR(2000) NULL, CONSTRAINT PK_CASE_TIME_LOG PRIMARY KEY (ID)) COMMENT='Журнал учета времени по задачам для Case' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_type (ID INT NOT NULL, CT_CODE VARCHAR(16) NOT NULL, CT_INFO VARCHAR(128) NULL, NEXT_ID BIGINT NULL, CONSTRAINT PK_CASE_TYPE PRIMARY KEY (ID)) COMMENT='Типы CASE' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE case_vroom (ID BIGINT AUTO_INCREMENT NOT NULL, created datetime DEFAULT NOW() NOT NULL, CASE_ID BIGINT NOT NULL, VR_NAME VARCHAR(400) NOT NULL, CONSTRAINT PK_CASE_VROOM PRIMARY KEY (ID)) COMMENT='Виртуальная комната для общения, позволяет создать определен' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE company (id BIGINT AUTO_INCREMENT NOT NULL, created datetime NULL, cname VARCHAR(512) NOT NULL, info VARCHAR(4000) NULL, category_id BIGINT NULL, contactInfo JSON NULL, groupId BIGINT NULL, old_id BIGINT NULL, parent_company_id BIGINT NULL, is_hidden BIT(1) NULL, is_deprecated BIT(1) DEFAULT 0 NOT NULL, CONSTRAINT PK_COMPANY PRIMARY KEY (id)) COMMENT='Компании' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE company_category (id BIGINT AUTO_INCREMENT NOT NULL, created datetime DEFAULT NOW() NULL, category_name VARCHAR(200) NULL, CONSTRAINT PK_COMPANY_CATEGORY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE company_dep (id BIGINT AUTO_INCREMENT NOT NULL, company_id BIGINT NOT NULL, created datetime NOT NULL, depTypeId INT NOT NULL, dep_name VARCHAR(200) NOT NULL, dep_info VARCHAR(1000) NULL, parent_dep BIGINT NULL, head_id BIGINT NULL, dep_extId VARCHAR(32) NOT NULL, CONSTRAINT PK_COMPANY_DEP PRIMARY KEY (id)) COMMENT='Подразделения компании' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE company_group (id BIGINT AUTO_INCREMENT NOT NULL, created datetime DEFAULT NOW() NULL, group_name VARCHAR(200) NULL, group_info VARCHAR(1000) NULL, CONSTRAINT PK_COMPANY_GROUP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE company_group_home (id BIGINT AUTO_INCREMENT NOT NULL, companyId BIGINT NOT NULL, external_code VARCHAR(32) NULL, mainId BIGINT NULL, CONSTRAINT PK_COMPANY_GROUP_HOME PRIMARY KEY (id), UNIQUE (external_code)) COMMENT='Список компаний, сотрудники которых считаются "своими" и име' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE company_group_item (id BIGINT AUTO_INCREMENT NOT NULL, group_id BIGINT NOT NULL, company_id BIGINT NOT NULL, CONSTRAINT PK_COMPANY_GROUP_ITEM PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE companysubscription (id BIGINT AUTO_INCREMENT NOT NULL, company_id BIGINT NOT NULL, email_addr VARCHAR(64) NOT NULL, lang_code VARCHAR(16) NULL, CONSTRAINT PK_COMPANYSUBSCRIPTION PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE contract (id BIGINT NOT NULL, contract_type INT NOT NULL, cost BIGINT NULL, date_signing datetime NULL, date_valid datetime NULL, cost_currency INT NULL, organization_id BIGINT NULL, parent_contract_id BIGINT NULL, project_id BIGINT NULL, CONSTRAINT PK_CONTRACT PRIMARY KEY (id), UNIQUE (project_id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE contract_date (id BIGINT AUTO_INCREMENT NOT NULL, contract_id BIGINT NOT NULL, date datetime NULL, comment VARCHAR(2048) NULL, type INT NULL, notify BIT(1) NULL, CONSTRAINT PK_CONTRACT_DATE PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE decimal_number (id BIGINT AUTO_INCREMENT NOT NULL, org_code VARCHAR(4) NOT NULL, classifier_code INT NOT NULL, reg_number INT NOT NULL, modification_number INT NULL, entity_id BIGINT NULL, is_reserve INT DEFAULT 0 NOT NULL, CONSTRAINT PK_DECIMAL_NUMBER PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE department_type (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(200) NOT NULL, info VARCHAR(1000) NULL, CONSTRAINT PK_DEPARTMENT_TYPE PRIMARY KEY (id)) COMMENT='Тип подразделения' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit (ID BIGINT AUTO_INCREMENT NOT NULL, UTYPE_ID INT NOT NULL, CREATED datetime NOT NULL, UNIT_NAME VARCHAR(256) NOT NULL, UNIT_INFO TEXT NULL, LAST_UPDATE datetime NULL, CREATOR_ID BIGINT NULL, UNIT_STATE INT NULL, old_id BIGINT NULL, wiki_link VARCHAR(256) NULL, history_version MEDIUMTEXT NULL, cdr_description MEDIUMTEXT NULL, configuration MEDIUMTEXT NULL, aliases VARCHAR(500) NULL, CONSTRAINT PK_DEV_UNIT PRIMARY KEY (ID)) COMMENT='Элементы разработки :- компоненты (бывшие проекты .CP';
CREATE TABLE dev_unit_att (ID BIGINT AUTO_INCREMENT NOT NULL, DEVUNIT_ID BIGINT NULL, ATT_ID BIGINT NULL, CONSTRAINT PK_DEV_UNIT_ATT PRIMARY KEY (ID)) COMMENT='Вложения для компоненты/продукта' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_branch (ID BIGINT AUTO_INCREMENT NOT NULL, UNIT_ID BIGINT NOT NULL, CREATED datetime NOT NULL, CREATOR BIGINT NULL, BRANCH_NAME VARCHAR(200) NOT NULL, BRANCH_INFO TEXT NULL, CURR_VERSION VARCHAR(64) NOT NULL, LAST_UPDATE datetime NULL, CONSTRAINT PK_DEV_UNIT_BRANCH PRIMARY KEY (ID)) COMMENT='Ветка разработки' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_children (ID BIGINT AUTO_INCREMENT NOT NULL, DUNIT_ID BIGINT NOT NULL, CHILD_ID BIGINT NOT NULL, CONSTRAINT PK_DEV_UNIT_CHILDREN PRIMARY KEY (ID)) COMMENT='Дочерние элементы продукта/компоненты' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_event (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime NULL, UNIT_ID BIGINT NULL, INITIATOR_ID BIGINT NULL, EVENT_TYPE INT NULL, UNIT_STATE INT NULL, UNIT_NAME VARCHAR(256) NULL, BRANCH_ID BIGINT NULL, VERSION_ID BIGINT NULL, CHILD_ID BIGINT NULL, CONT_ID BIGINT NULL, MEMBER_ID BIGINT NULL, MEMBER_ROLE INT NULL, EventData TEXT NULL, CONSTRAINT PK_DEV_UNIT_EVENT PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_event_type (ID INT AUTO_INCREMENT NOT NULL, EVT_CODE VARCHAR(32) NOT NULL, EVT_INFO VARCHAR(2000) NULL, CONSTRAINT PK_DEV_UNIT_EVENT_TYPE PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_member (ID BIGINT AUTO_INCREMENT NOT NULL, UNIT_ID BIGINT NOT NULL, MEMBER_ID BIGINT NOT NULL, MEMBER_ROLE INT NOT NULL, CONSTRAINT PK_DEV_UNIT_MEMBER PRIMARY KEY (ID)) COMMENT='Участники продукта/компоненты' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_mrole (ID INT AUTO_INCREMENT NOT NULL, UROLE_CODE VARCHAR(32) NOT NULL, UROLE_INFO VARCHAR(2000) NULL, CONSTRAINT PK_DEV_UNIT_MROLE PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_state (ID INT AUTO_INCREMENT NOT NULL, UST_CODE VARCHAR(32) NOT NULL, UST_INFO VARCHAR(2000) NULL, CONSTRAINT PK_DEV_UNIT_STATE PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_type (ID INT AUTO_INCREMENT NOT NULL, UNIT_TYPE VARCHAR(32) NOT NULL, UNIT_INFO VARCHAR(1000) NULL, CONSTRAINT PK_DEV_UNIT_TYPE PRIMARY KEY (ID)) COMMENT='Тип единицы разработки (Текущий словарь из 2 элементов: комп' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE dev_unit_version (ID BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime NOT NULL, CREATOR BIGINT NOT NULL, UNIT_ID BIGINT NOT NULL, BRANCH_ID BIGINT NOT NULL, VERSION VARCHAR(64) NULL, VERSION_INFO VARCHAR(2000) NULL, CONSTRAINT PK_DEV_UNIT_VERSION PRIMARY KEY (ID)) COMMENT='Версия' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE devunitsubscription (id BIGINT AUTO_INCREMENT NOT NULL, dev_unit_id BIGINT NOT NULL, email_addr VARCHAR(64) NOT NULL, lang_code VARCHAR(16) NULL, CONSTRAINT PK_DEVUNITSUBSCRIPTION PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE document (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(512) NULL, inventory_number BIGINT NULL, type_id BIGINT NOT NULL, annotation TEXT NULL, project_id BIGINT NULL, created datetime DEFAULT NOW() NOT NULL, tags TEXT NULL, decimal_number VARCHAR(32) NULL, contractor_id BIGINT NULL, registrar_id BIGINT NULL, version VARCHAR(128) NULL, equipment_id BIGINT NULL, is_approved BIT(1) DEFAULT 1 NULL, execution_type INT NULL, state INT DEFAULT 1 NOT NULL, approved_by_id BIGINT NULL, approval_date datetime NULL, CONSTRAINT PK_DOCUMENT PRIMARY KEY (id), UNIQUE (decimal_number), UNIQUE (inventory_number)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE document_member (id BIGINT AUTO_INCREMENT NOT NULL, document_id BIGINT NOT NULL, person_id BIGINT NOT NULL, CONSTRAINT PK_DOCUMENT_MEMBER PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE document_type (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NOT NULL, document_category VARCHAR(32) NULL, short_name VARCHAR(16) NULL, gost VARCHAR(64) NULL, CONSTRAINT PK_DOCUMENT_TYPE PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE employee_registration (id BIGINT NOT NULL, employment_date date NULL, employment_type INT NULL, with_registration BIT(1) DEFAULT 1 NOT NULL, position VARCHAR(128) NULL, workplace TEXT NULL, equipment_list VARCHAR(64) NULL, resource_list VARCHAR(128) NULL, phone_office_type_list VARCHAR(64) NULL, probation_period INT NULL, resource_comment VARCHAR(512) NULL, operating_system VARCHAR(64) NULL, additional_soft VARCHAR(512) NULL, curators VARCHAR(64) NULL, person BIGINT NULL, CONSTRAINT PK_EMPLOYEE_REGISTRATION PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE equipment (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NOT NULL, name_sldwrks VARCHAR(128) NULL, created datetime DEFAULT NOW() NULL, type VARCHAR(64) DEFAULT 'DETAIL' NOT NULL, linked_equipment_id BIGINT NULL, comment VARCHAR(1024) NULL, author_id BIGINT NOT NULL, manager_id BIGINT NULL, project_id BIGINT NULL, CONSTRAINT PK_EQUIPMENT PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE export_syb_entry (id BIGINT AUTO_INCREMENT NOT NULL, CREATED datetime DEFAULT NOW() NOT NULL, instance_id VARCHAR(32) NOT NULL, local_id BIGINT NOT NULL, obj_type VARCHAR(32) NOT NULL, obj_dump MEDIUMTEXT NOT NULL, CONSTRAINT PK_EXPORT_SYB_ENTRY PRIMARY KEY (id), UNIQUE (instance_id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE importance_level (id INT AUTO_INCREMENT NOT NULL, code VARCHAR(32) NOT NULL, info VARCHAR(1000) NULL, CONSTRAINT PK_IMPORTANCE_LEVEL PRIMARY KEY (id)) COMMENT='Уровень важности для объектов системы (для CASE в частности)' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_company_group (id BIGINT AUTO_INCREMENT NOT NULL, jira_company_name VARCHAR(200) NULL, company_id BIGINT NULL, CONSTRAINT PK_JIRA_COMPANY_GROUP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_endpoint (id BIGINT AUTO_INCREMENT NOT NULL, server_addr VARCHAR(64) NOT NULL, project_id VARCHAR(128) NOT NULL, COMPANY_ID BIGINT NOT NULL, STATUS_MAP_ID BIGINT NULL, PRIORITY_MAP_ID BIGINT NULL, person_id BIGINT NULL, server_login VARCHAR(32) NULL, server_pwd VARCHAR(32) NULL, SLA_MAP_ID BIGINT NULL, CONSTRAINT PK_JIRA_ENDPOINT PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_priority_map (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NULL, CONSTRAINT PK_JIRA_PRIORITY_MAP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_priority_map_entry (id BIGINT AUTO_INCREMENT NOT NULL, MAP_ID BIGINT NULL, Jira_priority_id BIGINT NULL, LOCAL_priority_id BIGINT NULL, LOCAL_priority_name VARCHAR(128) NULL, jira_priority_name VARCHAR(128) NULL, jira_sla_info VARCHAR(128) NULL, CONSTRAINT PK_JIRA_PRIORITY_MAP_ENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_sla_map (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NULL, CONSTRAINT PK_JIRA_SLA_MAP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_sla_map_entry (id BIGINT AUTO_INCREMENT NOT NULL, MAP_ID BIGINT NULL, issue_type VARCHAR(256) NOT NULL, severity VARCHAR(256) NULL, `description` VARCHAR(1024) NULL, time_of_reaction_min BIGINT NULL, time_of_decision_min BIGINT NOT NULL, CONSTRAINT PK_JIRA_SLA_MAP_ENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_status_map (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NULL, CONSTRAINT PK_JIRA_STATUS_MAP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE jira_status_map_entry (id BIGINT AUTO_INCREMENT NOT NULL, MAP_ID BIGINT NULL, Jira_status_name VARCHAR(256) NULL, LOCAL_status_id BIGINT NULL, LOCAL_status_name VARCHAR(256) NULL, CONSTRAINT PK_JIRA_STATUS_MAP_ENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE location (ID BIGINT AUTO_INCREMENT NOT NULL, PARENT_ID BIGINT NULL, TYPE_ID INT NULL, NAME VARCHAR(256) NOT NULL, `DESCRIPTION` VARCHAR(1024) NULL, OLD_ID BIGINT NULL, CODE VARCHAR(32) NULL, `PATH` VARCHAR(256) NOT NULL, CONSTRAINT PK_LOCATION PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE location_type (ID INT AUTO_INCREMENT NOT NULL, LOCATION_TYPE VARCHAR(32) NOT NULL, LOCATION_INFO VARCHAR(1000) NULL, WEIGHT INT NULL, CONSTRAINT PK_LOCATION_TYPE PRIMARY KEY (ID)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE login_role_item (id BIGINT AUTO_INCREMENT NOT NULL, login_id BIGINT NOT NULL, role_id INT NOT NULL, CONSTRAINT PK_LOGIN_ROLE_ITEM PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE migrationentry (id INT AUTO_INCREMENT NOT NULL, entry_code VARCHAR(64) NOT NULL, lastUpdate datetime NULL, last_id BIGINT NOT NULL, CONSTRAINT PK_MIGRATIONENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE person (id BIGINT AUTO_INCREMENT NOT NULL, created datetime NOT NULL, creator VARCHAR(256) NOT NULL, company_id BIGINT NOT NULL, firstname VARCHAR(128) NULL, lastname VARCHAR(128) NULL, secondname VARCHAR(128) NULL, displayname VARCHAR(256) NOT NULL, displayPosition VARCHAR(500) NULL, sex CHAR(1) NOT NULL, birthday datetime NULL, passportinfo VARCHAR(2000) NULL, info VARCHAR(2000) NULL, ipaddress VARCHAR(64) NULL, isdeleted INT DEFAULT 0 NOT NULL, department_id BIGINT NULL, department VARCHAR(256) NULL, displayShortName VARCHAR(128) NULL, isfired INT DEFAULT 0 NOT NULL, contactInfo JSON NULL, relations VARCHAR(128) NULL, old_id BIGINT NULL, locale VARCHAR(8) DEFAULT 'ru' NULL, firedate datetime NULL, CONSTRAINT PK_PERSON PRIMARY KEY (id)) COMMENT='Контакты, включая внутренних сотрудников компании' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE person_absence (id BIGINT AUTO_INCREMENT NOT NULL, created datetime NOT NULL, creator_id BIGINT NOT NULL, person_id BIGINT NOT NULL, reason_id INT NOT NULL, from_time datetime NOT NULL, till_time datetime NOT NULL, user_comment TEXT NULL, updated datetime NOT NULL, old_id BIGINT NOT NULL, CONSTRAINT PK_PERSON_ABSENCE PRIMARY KEY (id)) COMMENT='Журнал отсутствий' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE platform (id BIGINT AUTO_INCREMENT NOT NULL, company_id BIGINT NULL, name VARCHAR(128) NOT NULL, parameters VARCHAR(256) NULL, comment MEDIUMTEXT NULL, manager_id BIGINT NULL, case_id BIGINT NULL, project_id BIGINT NULL, CONSTRAINT PK_PLATFORM PRIMARY KEY (id), UNIQUE (project_id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE project_to_product (project_id BIGINT NOT NULL, product_id BIGINT NOT NULL, CONSTRAINT PK_PROJECT_TO_PRODUCT PRIMARY KEY (project_id, product_id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE redmine_endpoint (id BIGINT AUTO_INCREMENT NOT NULL, server_addr VARCHAR(64) NOT NULL, project_id VARCHAR(128) NOT NULL, api_key VARCHAR(128) NOT NULL, COMPANY_ID BIGINT NOT NULL, last_created datetime NULL, last_updated datetime NULL, STATUS_MAP_ID BIGINT NULL, PRIORITY_MAP_ID BIGINT NULL, DEFAULT_USER_ID BIGINT NULL, DEFAULT_USER_LOCAL_ID BIGINT NULL, CONSTRAINT PK_REDMINE_ENDPOINT PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE redmine_priority_map (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NULL, CONSTRAINT PK_REDMINE_PRIORITY_MAP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE redmine_priority_map_entry (id BIGINT AUTO_INCREMENT NOT NULL, MAP_ID BIGINT NULL, RM_priority_id BIGINT NULL, LOCAL_priority_id BIGINT NULL, LOCAL_priority_name VARCHAR(128) NULL, RM_priority_name VARCHAR(256) NULL, CONSTRAINT PK_REDMINE_PRIORITY_MAP_ENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE redmine_status_map (id BIGINT AUTO_INCREMENT NOT NULL, name VARCHAR(128) NULL, CONSTRAINT PK_REDMINE_STATUS_MAP PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE redmine_status_map_entry (id BIGINT AUTO_INCREMENT NOT NULL, MAP_ID BIGINT NULL, RM_status_id BIGINT NULL, LOCAL_status_id INT NULL, LOCAL_status_name VARCHAR(128) NULL, LOCAL_previous_status_id INT NULL, CONSTRAINT PK_REDMINE_STATUS_MAP_ENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE redmine_to_crm_status_map_entry (id BIGINT AUTO_INCREMENT NOT NULL, MAP_ID BIGINT NULL, RM_status_id BIGINT NULL, LOCAL_status_id INT NULL, CONSTRAINT PK_REDMINE_TO_CRM_STATUS_MAP_ENTRY PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE report (id BIGINT AUTO_INCREMENT NOT NULL, name TEXT NULL, status VARCHAR(16) NOT NULL, case_query VARCHAR(8192) NOT NULL, creator BIGINT NOT NULL, created datetime NOT NULL, modified datetime NULL, locale VARCHAR(16) DEFAULT 'ru' NOT NULL, type VARCHAR(32) DEFAULT 'CASE_OBJECTS' NOT NULL, is_restricted BIT(1) DEFAULT 0 NULL, CONSTRAINT PK_REPORT PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE server (id BIGINT AUTO_INCREMENT NOT NULL, platform_id BIGINT NOT NULL, name VARCHAR(128) NULL, ip VARCHAR(64) NULL, parameters VARCHAR(256) NULL, comment MEDIUMTEXT NULL, CONSTRAINT PK_SERVER PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE sys_config (id BIGINT NOT NULL, ownCompanyId BIGINT NOT NULL COMMENT 'Идентификатор компании-владельца базы портал. Сотрудники этой компании имеют право получать доступ к основным ресурсам сервера', CONSTRAINT PK_SYS_CONFIG PRIMARY KEY (id)) COMMENT='Системная конфигурация';
CREATE TABLE time_unit (id INT NOT NULL, unit_code CHAR(1) NOT NULL, unit_name VARCHAR(64) NOT NULL, minutes BIGINT NOT NULL, CONSTRAINT PK_TIME_UNIT PRIMARY KEY (id)) COMMENT='Словарь едениц измерений для времени' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE user_case_assignment (id BIGINT AUTO_INCREMENT NOT NULL, login_id BIGINT NOT NULL, table_entity INT NOT NULL, states VARCHAR(2048) NULL, persons VARCHAR(2048) NULL, CONSTRAINT PK_USER_CASE_ASSIGNMENT PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE user_dashboard (id BIGINT AUTO_INCREMENT NOT NULL, login_id BIGINT NOT NULL, case_filter_id BIGINT NOT NULL, name VARCHAR(256) NOT NULL, CONSTRAINT PK_USER_DASHBOARD PRIMARY KEY (id)) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE user_login (id BIGINT AUTO_INCREMENT NOT NULL, ulogin VARCHAR(64) NOT NULL, upass VARCHAR(64) NULL, created datetime DEFAULT NOW() NOT NULL, lastPwdChange datetime NULL, pwdExpired datetime NULL, astate INT NOT NULL, personId BIGINT NULL, authType INT NOT NULL, ipMaskAllow BIGINT NULL, ipMaskDeny BIGINT NULL, info VARCHAR(1000) NULL, CONSTRAINT PK_USER_LOGIN PRIMARY KEY (id), UNIQUE (ulogin)) COMMENT='логины для авторизации' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE user_role (id INT AUTO_INCREMENT NOT NULL, role_code VARCHAR(256) NULL, role_info VARCHAR(1000) NULL, privileges TEXT NULL, scopes VARCHAR(1024) DEFAULT 'SYSTEM' NOT NULL, is_default_for_contact BIT(1) DEFAULT 0 NULL, CONSTRAINT PK_USER_ROLE PRIMARY KEY (id)) COMMENT='Роль авторизации, каждой роли соответствует определенный наб' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE user_role_1 (id INT NULL, role_code VARCHAR(256) NULL, role_info VARCHAR(1000) NULL, privileges VARCHAR(4369) NULL, scopes VARCHAR(1024) NULL, is_default_for_contact BIT(1) NULL) CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE worker_entry (id BIGINT AUTO_INCREMENT NOT NULL, created datetime DEFAULT NOW() NOT NULL, personId BIGINT NOT NULL, dep_id BIGINT NOT NULL, companyId BIGINT NOT NULL, positionId BIGINT NOT NULL, hireDate datetime NULL, hireOrderNo VARCHAR(256) NULL, active INT NOT NULL, worker_extId VARCHAR(32) NOT NULL, CONSTRAINT PK_WORKER_ENTRY PRIMARY KEY (id)) COMMENT='Кадровая запись, единица штатного расписания.' CHARACTER SET UTF8 COLLATE utf8_general_ci;
CREATE TABLE worker_position (id BIGINT AUTO_INCREMENT NOT NULL, pos_name VARCHAR(256) NOT NULL, company_id BIGINT NOT NULL, CONSTRAINT PK_WORKER_POSITION PRIMARY KEY (id)) COMMENT='Должности для сотрудников' CHARACTER SET UTF8 COLLATE utf8_general_ci;
ALTER TABLE case_object ADD CONSTRAINT UQ_CASE UNIQUE (CASENO, CASE_TYPE);
ALTER TABLE company_group_item ADD CONSTRAINT UQ_COMP_GR_ITEM UNIQUE (group_id, company_id);
ALTER TABLE login_role_item ADD CONSTRAINT UQ_LR_ITEM UNIQUE (login_id, role_id);
ALTER TABLE case_tag ADD CONSTRAINT case_tag_name_unique UNIQUE (case_type, company_id, name);
ALTER TABLE decimal_number ADD CONSTRAINT decimal_number_uk UNIQUE (org_code, classifier_code, reg_number, modification_number);
ALTER TABLE companysubscription ADD CONSTRAINT uq_company_subscription UNIQUE (email_addr, company_id);
ALTER TABLE devunitsubscription ADD CONSTRAINT uq_company_subscription UNIQUE (email_addr, dev_unit_id);
CREATE INDEX FK_CASECOMMENT_STATE ON case_comment(CSTATE_ID);
CREATE INDEX FK_CASEDOC_AUTHOR ON case_document(AUTHOR);
CREATE INDEX FK_CASEDOC_TYPE ON case_document(DOC_TYPE);
CREATE INDEX FK_CASE_IMPORTANCE ON case_object(IMPORTANCE);
CREATE INDEX FK_CASE_REFERENCE ON case_refs(CASE_REF);
CREATE INDEX FK_CASE_STAGE_TYPE ON case_stage(STAGE_TYPE);
CREATE INDEX FK_CASE_STATE ON case_object(STATE);
CREATE INDEX FK_CASE_STATE_TO_COMPANY_CASE_STATE_ID ON case_state_to_company(state_id);
CREATE INDEX FK_CASE_STATE_TO_COMPANY_COMPANY_ID ON case_state_to_company(company_id);
CREATE INDEX FK_CASE_TASK_TUNIT ON case_task(TIME_UNIT);
CREATE INDEX FK_CASE_TYPE ON case_object(CASE_TYPE);
CREATE INDEX FK_CD_HEAD ON company_dep(head_id);
CREATE INDEX FK_CD_PARENT ON company_dep(parent_dep);
CREATE INDEX FK_CGH_MAIN ON company_group_home(mainId);
CREATE INDEX FK_CG_COMPANY ON company_group_item(company_id);
CREATE INDEX FK_CL_CASE ON case_location(CASE_ID);
CREATE INDEX FK_CL_LOCATION ON case_location(LOCATION_ID);
CREATE INDEX FK_COMPANY_POS ON worker_position(company_id);
CREATE INDEX FK_COMP_HOME_GROUP ON company_group_home(companyId);
CREATE INDEX FK_CO_CASE ON case_member(CASE_ID);
CREATE INDEX FK_CO_MEMBER ON case_member(MEMBER_ID);
CREATE INDEX FK_CO_MEMBER_ROLE ON case_member(MEMBER_ROLE_ID);
CREATE INDEX FK_CSCOMM_REPLY ON case_comment(REPLY_TO);
CREATE INDEX FK_CSC_REF_SRC ON case_comment_reply(COMMENT_ID);
CREATE INDEX FK_CSEVENT_STATE ON case_event(case_state);
CREATE INDEX FK_CSEVENT_TYPE ON case_event(event_type);
CREATE INDEX FK_CSMATRIX_STATE ON case_state_matrix(CASE_STATE);
CREATE INDEX FK_CSTAGE_TERM_TYPE ON case_term(TERM_TYPE);
CREATE INDEX FK_CS_ATTACHMENT ON case_attachment(ATT_ID);
CREATE INDEX FK_CTERM_CREATOR ON case_term(CREATOR_ID);
CREATE INDEX FK_CTERM_STAGE ON case_term(STAGE_ID);
CREATE INDEX FK_DEP_TYPE ON company_dep(depTypeId);
CREATE INDEX FK_DEVUNIT_STATE ON dev_unit(UNIT_STATE);
CREATE INDEX FK_DEV_UNIT_TYPE ON dev_unit(UTYPE_ID);
CREATE INDEX FK_DU_EVENT_MROLE ON dev_unit_event(MEMBER_ROLE);
CREATE INDEX FK_DU_EVENT_TYPE ON dev_unit_event(EVENT_TYPE);
CREATE INDEX FK_DU_MEMBER_ROLE ON dev_unit_member(MEMBER_ROLE);
CREATE INDEX FK_DVUNIT_ATT ON dev_unit_att(ATT_ID);
CREATE INDEX FK_DVU_BRVER ON dev_unit_version(BRANCH_ID);
CREATE INDEX FK_DVU_MEMBER ON dev_unit_member(MEMBER_ID);
CREATE INDEX FK_JIRA_EP_COMPANY ON jira_endpoint(COMPANY_ID);
CREATE INDEX FK_JIRA_EP_PRIORITY ON jira_endpoint(PRIORITY_MAP_ID);
CREATE INDEX FK_JIRA_EP_PRIORITY_ENTRY ON jira_priority_map_entry(MAP_ID);
CREATE INDEX FK_JIRA_EP_SLA ON jira_endpoint(SLA_MAP_ID);
CREATE INDEX FK_JIRA_EP_SLA_ENTRY ON jira_sla_map_entry(MAP_ID);
CREATE INDEX FK_JIRA_EP_STATUS ON jira_endpoint(STATUS_MAP_ID);
CREATE INDEX FK_JIRA_EP_STATUS_ENTRY ON jira_status_map_entry(MAP_ID);
CREATE INDEX FK_LOCATION_PARENT ON location(PARENT_ID);
CREATE INDEX FK_LOCATION_TYPE ON location(TYPE_ID);
CREATE INDEX FK_LR_LOGIN ON login_role_item(login_id);
CREATE INDEX FK_LR_ROLE ON login_role_item(role_id);
CREATE INDEX FK_PARENT_COMMENT ON case_attachment(CCOMMENT_ID);
CREATE INDEX FK_PARENT_COMPANY ON company(parent_company_id);
CREATE INDEX FK_PERSON_PERSON_ID ON employee_registration(person);
CREATE INDEX FK_RDMINE_EP_COMPANY ON redmine_endpoint(COMPANY_ID);
CREATE INDEX FK_RDMINE_EP_PRIORITY ON redmine_endpoint(PRIORITY_MAP_ID);
CREATE INDEX FK_RDMINE_EP_PRIORITY_ENTRY ON redmine_priority_map_entry(MAP_ID);
CREATE INDEX FK_RDMINE_EP_STATUS ON redmine_endpoint(STATUS_MAP_ID);
CREATE INDEX FK_RDMINE_EP_STATUS_ENTRY ON redmine_status_map_entry(MAP_ID);
CREATE INDEX FK_RDMINE_TO_CRM_BACKWARD_STATUS ON redmine_to_crm_status_map_entry(LOCAL_status_id);
CREATE INDEX FK_RDMINE_TO_CRM_EP_STATUS_ENTRY ON redmine_to_crm_status_map_entry(MAP_ID);
CREATE INDEX FK_RDMINE_TO_CRM_STATUS ON redmine_status_map_entry(LOCAL_status_id);
CREATE INDEX FK_RDMINE_TO_OLD_CRM_STATUS ON redmine_status_map_entry(LOCAL_previous_status_id);
CREATE INDEX FK_SYSCFG_OWNCOMPANY ON sys_config(ownCompanyId);
CREATE INDEX FK_ULOGIN_ASTATE ON user_login(astate);
CREATE INDEX FK_WORKER_PE_DEP ON worker_entry(dep_id);
CREATE INDEX IX_CASE_STAGE_AUTHOR_ID ON case_stage(CREATOR_ID);
CREATE INDEX IX_CASE_STAGE_CID ON case_stage(CASE_ID);
CREATE INDEX IX_CASE_TASK ON case_task(CASE_ID);
CREATE INDEX IX_CASE_TASK_WORKER ON case_task(WORKER_ID);
CREATE INDEX IX_CSATT ON case_attachment(CASE_ID, ATT_ID);
CREATE INDEX UQ_CASEDOCTYPE ON case_doc_type(DT_CODE);
CREATE INDEX UQ_CASE_EXTID ON case_object(EXT_ID);
CREATE INDEX UQ_CASE_STAGE_ORDER ON case_stage(CASE_ID, STAGE_ORDER);
CREATE INDEX UQ_CASE_STATE ON case_state(STATE);
CREATE INDEX UQ_CASE_TERM_CODE ON case_term_type(TERM_CODE);
CREATE INDEX UQ_CASE_TYPE ON case_type(CT_CODE);
CREATE INDEX UQ_CSCOMM_REPLY ON case_comment_reply(CASE_ID, REPLY_ID);
CREATE INDEX UQ_CSEVT_CODE ON case_event_type(EVENT_CODE);
CREATE INDEX UQ_DEVCOMP_BRANCH ON dev_unit_branch(UNIT_ID, BRANCH_NAME);
CREATE INDEX UQ_DEVUNIT_STATE ON dev_unit_state(UST_CODE);
CREATE INDEX UQ_DEV_UNIT_TYPE ON dev_unit_type(UNIT_TYPE);
CREATE INDEX UQ_DUNIT_MROLE ON dev_unit_mrole(UROLE_CODE);
CREATE INDEX UQ_DU_EVT_CODE ON dev_unit_event_type(EVT_CODE);
CREATE INDEX UQ_IMPOTANCE_LEVEL ON importance_level(code);
CREATE INDEX UQ_PROJECT_NAME ON dev_unit(UNIT_NAME);
CREATE INDEX application_dev_unit_fk ON application(dev_unit_id);
CREATE INDEX application_server_fk ON application(server_id);
CREATE INDEX case_comment_remote_link_id_fk ON case_comment(remote_link_id);
CREATE INDEX case_link_case_id_fk ON case_link(case_id);
CREATE INDEX case_object_tag_to_case_fk ON case_object_tag(case_id);
CREATE INDEX case_object_tag_to_tag_fk ON case_object_tag(tag_id);
CREATE INDEX cmanager_id_to_person_fk ON case_comment(cmanager_id);
CREATE INDEX decimal_number_equipment_id_fk ON decimal_number(entity_id);
CREATE INDEX document_approved_by_id_fk ON document(approved_by_id);
CREATE INDEX document_contractor_id_fk ON document(contractor_id);
CREATE INDEX document_equipment_id_fk ON document(equipment_id);
CREATE INDEX document_registrar_id_fk ON document(registrar_id);
CREATE INDEX documentation_type_id_fk ON document(type_id);
CREATE INDEX equipment_author_id_fk ON equipment(author_id);
CREATE INDEX equipment_manager_id_fk ON equipment(manager_id);
CREATE INDEX equipment_project_id_fk ON equipment(project_id);
CREATE INDEX fk_case_comment_importance ON case_comment(cimp_level);
CREATE INDEX fk_case_filter_id_to_case_filter ON user_dashboard(case_filter_id);
CREATE INDEX fk_case_id_to_case_object ON platform(case_id);
CREATE INDEX fk_case_product ON case_object(product_id);
CREATE INDEX fk_caseobj_initcomp ON case_object(initiator_company);
CREATE INDEX fk_company_case_tag ON case_tag(company_id);
CREATE INDEX fk_company_category ON company(category_id);
CREATE INDEX fk_company_id ON jira_company_group(company_id);
CREATE INDEX fk_company_subscription ON companysubscription(company_id);
CREATE INDEX fk_contract_id_to_contract ON contract_date(contract_id);
CREATE INDEX fk_devunit_subscription ON devunitsubscription(dev_unit_id);
CREATE INDEX fk_document_id_to_document ON document_member(document_id);
CREATE INDEX fk_document_project_id ON document(project_id);
CREATE INDEX fk_login_id_to_login ON user_dashboard(login_id);
CREATE INDEX fk_organization_company ON contract(organization_id);
CREATE INDEX fk_parent_contract ON contract(parent_contract_id);
CREATE INDEX fk_person_case_tag ON case_tag(person_id);
CREATE INDEX fk_person_id_to_person ON document_member(person_id);
CREATE INDEX fk_personabs_reason ON person_absence(reason_id);
CREATE INDEX fk_state_from_to_case_state ON case_state_workflow_link(state_from);
CREATE INDEX fk_state_to_to_case_state ON case_state_workflow_link(state_to);
CREATE INDEX fk_ulogin_authtype ON user_login(authType);
CREATE INDEX fk_user_case_assignment_login_id_to_user_login ON user_case_assignment(login_id);
CREATE INDEX fk_workflow_id_to_case_state_workflow ON case_state_workflow_link(workflow_id);
CREATE INDEX issue_filter_login_id_fk ON case_filter(login_id);
CREATE INDEX ix_att_creator ON attachment(CREATOR);
CREATE INDEX ix_case_creator ON case_object(CREATOR);
CREATE INDEX ix_case_document ON case_document(CASE_ID);
CREATE INDEX ix_case_event ON case_event(case_id);
CREATE INDEX ix_case_event_dt ON case_event(created);
CREATE INDEX ix_case_initiator ON case_object(initiator);
CREATE INDEX ix_case_kwords ON case_object(KEYWORDS);
CREATE INDEX ix_case_manager ON case_object(MANAGER);
CREATE INDEX ix_case_term ON case_term(CASE_ID);
CREATE INDEX ix_case_vroom ON case_vroom(CASE_ID);
CREATE INDEX ix_casecomment ON case_comment(CASE_ID);
CREATE INDEX ix_casecomment_ap ON case_comment(AUTHOR_ID);
CREATE INDEX ix_casecomment_vr ON case_comment(VROOM);
CREATE INDEX ix_casename ON case_object(CASE_NAME);
CREATE INDEX ix_cc_reply ON case_comment_reply(REPLY_ID);
CREATE INDEX ix_cc_reply_src ON case_comment_reply(CASE_ID, COMMENT_ID);
CREATE INDEX ix_ci_ref ON case_notifier(CASE_ID);
CREATE INDEX ix_company_group ON company(groupId);
CREATE INDEX ix_company_old_id ON company(old_id);
CREATE INDEX ix_cref_cont ON case_refs(CASE_ID);
CREATE INDEX ix_cref_stage ON case_refs(CASE_STAGE);
CREATE INDEX ix_ctime_case ON case_time_log(CASE_ID);
CREATE INDEX ix_ctime_person ON case_time_log(PERSON_ID);
CREATE INDEX ix_dcombr ON dev_unit_branch(UNIT_ID);
CREATE INDEX ix_dcombr_creator ON dev_unit_branch(CREATOR);
CREATE INDEX ix_devcomp_att ON dev_unit_att(DEVUNIT_ID, ATT_ID);
CREATE INDEX ix_devcomp_creator ON dev_unit(CREATOR_ID);
CREATE INDEX ix_devcomp_ver ON dev_unit_version(UNIT_ID, BRANCH_ID);
CREATE INDEX ix_devcomp_vr_crt ON dev_unit_version(CREATOR);
CREATE INDEX ix_devunit_child ON dev_unit_children(CHILD_ID);
CREATE INDEX ix_devunit_cont ON dev_unit_children(DUNIT_ID);
CREATE INDEX ix_devunit_event ON dev_unit_event(UNIT_ID, CREATED);
CREATE INDEX ix_devunit_old_id ON dev_unit(old_id, UTYPE_ID);
CREATE INDEX ix_persabs_creator ON person_absence(creator_id);
CREATE INDEX ix_persabsence ON person_absence(person_id);
CREATE INDEX ix_person_company ON person(company_id);
CREATE INDEX ix_person_dname ON person(displayname);
CREATE INDEX ix_person_old_id ON person(old_id);
CREATE INDEX ix_pi_ref ON case_notifier(PERSON_ID);
CREATE INDEX ix_ulogin_person ON user_login(personId);
CREATE INDEX ix_worker_comp ON worker_entry(companyId);
CREATE INDEX ix_worker_entry ON worker_entry(personId);
CREATE INDEX ix_worker_pos ON worker_entry(positionId);
CREATE INDEX platform_company_fk ON platform(company_id);
CREATE INDEX platform_id_to_platform_fk ON case_object(platform_id);
CREATE INDEX platform_person_fk ON platform(manager_id);
CREATE INDEX project_to_product_product_id_fk ON project_to_product(product_id);
CREATE INDEX server_platform_fk ON server(platform_id);
CREATE INDEX uq_absencereason ON absence_reason(ar_code);
CREATE INDEX uq_areason_oldcode ON absence_reason(old_id);
CREATE INDEX uq_astate ON admin_state(code);
CREATE INDEX uq_auth_type ON auth_type(at_code);
CREATE INDEX uq_case_doc ON case_document(CASE_ID, DOC_TYPE, REVISION);
CREATE INDEX uq_cipi ON case_notifier(CASE_ID, PERSON_ID);
CREATE INDEX uq_company ON company(cname);
CREATE INDEX uq_compcat_name ON company_category(category_name);
CREATE INDEX uq_compgroup ON company_group(group_name);
CREATE INDEX uq_cstate_matrix ON case_state_matrix(CASE_TYPE, CASE_STATE);
CREATE INDEX uq_dep_name ON company_dep(company_id, dep_name);
CREATE INDEX uq_deptype ON department_type(name);
CREATE INDEX uq_devunit_member ON dev_unit_member(UNIT_ID, MEMBER_ID);
CREATE INDEX uq_ext_dep ON company_dep(company_id, dep_extId);
CREATE INDEX uq_ext_worker ON worker_entry(companyId, worker_extId);
CREATE INDEX uq_migration_entry ON migrationentry(entry_code);
CREATE INDEX uq_role_code ON user_role(role_code);
CREATE INDEX uq_timeunit ON time_unit(unit_code);
CREATE INDEX uq_timeunit_name ON time_unit(unit_name);
ALTER TABLE attachment ADD CONSTRAINT FK_ATTACH_CREATOR FOREIGN KEY (CREATOR) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_document ADD CONSTRAINT FK_CASEDOC FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_document ADD CONSTRAINT FK_CASEDOC_AUTHOR FOREIGN KEY (AUTHOR) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_document ADD CONSTRAINT FK_CASEDOC_TYPE FOREIGN KEY (DOC_TYPE) REFERENCES case_doc_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_attachment ADD CONSTRAINT FK_CASE_ATTACHMENT FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_object ADD CONSTRAINT FK_CASE_CREATOR FOREIGN KEY (CREATOR) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_object ADD CONSTRAINT FK_CASE_IMPORTANCE FOREIGN KEY (IMPORTANCE) REFERENCES importance_level (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_object ADD CONSTRAINT FK_CASE_INITIATOR FOREIGN KEY (initiator) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_object ADD CONSTRAINT FK_CASE_MANAGER FOREIGN KEY (MANAGER) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_refs ADD CONSTRAINT FK_CASE_REFERENCE FOREIGN KEY (CASE_REF) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_refs ADD CONSTRAINT FK_CASE_REF_OWNER FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_stage ADD CONSTRAINT FK_CASE_STAGE_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_stage ADD CONSTRAINT FK_CASE_STAGE_CREF FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_stage ADD CONSTRAINT FK_CASE_STAGE_TYPE FOREIGN KEY (STAGE_TYPE) REFERENCES case_stage_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_object ADD CONSTRAINT FK_CASE_STATE FOREIGN KEY (STATE) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_state_to_company ADD CONSTRAINT FK_CASE_STATE_TO_COMPANY_CASE_STATE_ID FOREIGN KEY (state_id) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_state_to_company ADD CONSTRAINT FK_CASE_STATE_TO_COMPANY_COMPANY_ID FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_task ADD CONSTRAINT FK_CASE_TASK FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_task ADD CONSTRAINT FK_CASE_TASK_PWORKER FOREIGN KEY (WORKER_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_task ADD CONSTRAINT FK_CASE_TASK_TUNIT FOREIGN KEY (TIME_UNIT) REFERENCES time_unit (unit_code) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_term ADD CONSTRAINT FK_CASE_TERM FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_object ADD CONSTRAINT FK_CASE_TYPE FOREIGN KEY (CASE_TYPE) REFERENCES case_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company_dep ADD CONSTRAINT FK_CD_HEAD FOREIGN KEY (head_id) REFERENCES worker_entry (id) ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE company_dep ADD CONSTRAINT FK_CD_PARENT FOREIGN KEY (parent_dep) REFERENCES company_dep (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company_group_home ADD CONSTRAINT FK_CGH_MAIN FOREIGN KEY (mainId) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE company_group_item ADD CONSTRAINT FK_CG_COMPANY FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company_group_item ADD CONSTRAINT FK_CG_GROUP FOREIGN KEY (group_id) REFERENCES company_group (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_notifier ADD CONSTRAINT FK_CI_REF FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_location ADD CONSTRAINT FK_CL_CASE FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_location ADD CONSTRAINT FK_CL_LOCATION FOREIGN KEY (LOCATION_ID) REFERENCES location (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company_dep ADD CONSTRAINT FK_COMPANY_DEP FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE worker_position ADD CONSTRAINT FK_COMPANY_POS FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company_group_home ADD CONSTRAINT FK_COMP_HOME_GROUP FOREIGN KEY (companyId) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_member ADD CONSTRAINT FK_CO_CASE FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_member ADD CONSTRAINT FK_CO_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_member ADD CONSTRAINT FK_CO_MEMBER_ROLE FOREIGN KEY (MEMBER_ROLE_ID) REFERENCES dev_unit_mrole (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_refs ADD CONSTRAINT FK_CREF_STAGE FOREIGN KEY (CASE_STAGE) REFERENCES case_stage (ID) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_event ADD CONSTRAINT FK_CSEVENT FOREIGN KEY (case_id) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_event ADD CONSTRAINT FK_CSEVENT_STATE FOREIGN KEY (case_state) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_event ADD CONSTRAINT FK_CSEVENT_TYPE FOREIGN KEY (event_type) REFERENCES case_event_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_state_matrix ADD CONSTRAINT FK_CSMATRIX_CTYPE FOREIGN KEY (CASE_TYPE) REFERENCES case_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_state_matrix ADD CONSTRAINT FK_CSMATRIX_STATE FOREIGN KEY (CASE_STATE) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_term ADD CONSTRAINT FK_CSTAGE_TERM_TYPE FOREIGN KEY (TERM_TYPE) REFERENCES case_term_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_attachment ADD CONSTRAINT FK_CS_ATTACHMENT FOREIGN KEY (ATT_ID) REFERENCES attachment (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_term ADD CONSTRAINT FK_CTERM_CREATOR FOREIGN KEY (CREATOR_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_term ADD CONSTRAINT FK_CTERM_STAGE FOREIGN KEY (STAGE_ID) REFERENCES case_stage (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_time_log ADD CONSTRAINT FK_CTIME_PERSON FOREIGN KEY (PERSON_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_time_log ADD CONSTRAINT FK_CTTIME FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company_dep ADD CONSTRAINT FK_DEP_TYPE FOREIGN KEY (depTypeId) REFERENCES department_type (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_att ADD CONSTRAINT FK_DEVUNIT FOREIGN KEY (DEVUNIT_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_children ADD CONSTRAINT FK_DEVUNIT_CHILD FOREIGN KEY (CHILD_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_children ADD CONSTRAINT FK_DEVUNIT_CONT FOREIGN KEY (DUNIT_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_event ADD CONSTRAINT FK_DEVUNIT_EVENT FOREIGN KEY (UNIT_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit ADD CONSTRAINT FK_DEVUNIT_STATE FOREIGN KEY (UNIT_STATE) REFERENCES dev_unit_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit ADD CONSTRAINT FK_DEV_UNIT_TYPE FOREIGN KEY (UTYPE_ID) REFERENCES dev_unit_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_event ADD CONSTRAINT FK_DU_EVENT_MROLE FOREIGN KEY (MEMBER_ROLE) REFERENCES dev_unit_mrole (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_event ADD CONSTRAINT FK_DU_EVENT_TYPE FOREIGN KEY (EVENT_TYPE) REFERENCES dev_unit_event_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_member ADD CONSTRAINT FK_DU_MEMBER_ROLE FOREIGN KEY (MEMBER_ROLE) REFERENCES dev_unit_mrole (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_att ADD CONSTRAINT FK_DVUNIT_ATT FOREIGN KEY (ATT_ID) REFERENCES attachment (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_branch ADD CONSTRAINT FK_DVU_BRANCH FOREIGN KEY (UNIT_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_branch ADD CONSTRAINT FK_DVU_BRANCH_CR FOREIGN KEY (CREATOR) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_version ADD CONSTRAINT FK_DVU_BRVER FOREIGN KEY (BRANCH_ID) REFERENCES dev_unit_branch (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_member ADD CONSTRAINT FK_DVU_MEMBER FOREIGN KEY (MEMBER_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_member ADD CONSTRAINT FK_DVU_MEMBER_UNIT FOREIGN KEY (UNIT_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_version ADD CONSTRAINT FK_DVU_VERSION FOREIGN KEY (UNIT_ID) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE dev_unit_version ADD CONSTRAINT FK_DVU_VER_CR FOREIGN KEY (CREATOR) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE jira_endpoint ADD CONSTRAINT FK_JIRA_EP_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE jira_endpoint ADD CONSTRAINT FK_JIRA_EP_PRIORITY FOREIGN KEY (PRIORITY_MAP_ID) REFERENCES jira_priority_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE jira_priority_map_entry ADD CONSTRAINT FK_JIRA_EP_PRIORITY_ENTRY FOREIGN KEY (MAP_ID) REFERENCES jira_priority_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE jira_endpoint ADD CONSTRAINT FK_JIRA_EP_SLA FOREIGN KEY (SLA_MAP_ID) REFERENCES jira_sla_map (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE jira_sla_map_entry ADD CONSTRAINT FK_JIRA_EP_SLA_ENTRY FOREIGN KEY (MAP_ID) REFERENCES jira_sla_map (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE jira_endpoint ADD CONSTRAINT FK_JIRA_EP_STATUS FOREIGN KEY (STATUS_MAP_ID) REFERENCES jira_status_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE jira_status_map_entry ADD CONSTRAINT FK_JIRA_EP_STATUS_ENTRY FOREIGN KEY (MAP_ID) REFERENCES jira_status_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE location ADD CONSTRAINT FK_LOCATION_PARENT FOREIGN KEY (PARENT_ID) REFERENCES location (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE location ADD CONSTRAINT FK_LOCATION_TYPE FOREIGN KEY (TYPE_ID) REFERENCES location_type (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE login_role_item ADD CONSTRAINT FK_LR_LOGIN FOREIGN KEY (login_id) REFERENCES user_login (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE login_role_item ADD CONSTRAINT FK_LR_ROLE FOREIGN KEY (role_id) REFERENCES user_role (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company ADD CONSTRAINT FK_PARENT_COMPANY FOREIGN KEY (parent_company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE person ADD CONSTRAINT FK_PERSON_COMPANY FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE employee_registration ADD CONSTRAINT FK_PERSON_PERSON_ID FOREIGN KEY (person) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_notifier ADD CONSTRAINT FK_PI_REF FOREIGN KEY (PERSON_ID) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_endpoint ADD CONSTRAINT FK_RDMINE_EP_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_endpoint ADD CONSTRAINT FK_RDMINE_EP_PRIORITY FOREIGN KEY (PRIORITY_MAP_ID) REFERENCES redmine_priority_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_priority_map_entry ADD CONSTRAINT FK_RDMINE_EP_PRIORITY_ENTRY FOREIGN KEY (MAP_ID) REFERENCES redmine_priority_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_endpoint ADD CONSTRAINT FK_RDMINE_EP_STATUS FOREIGN KEY (STATUS_MAP_ID) REFERENCES redmine_status_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_status_map_entry ADD CONSTRAINT FK_RDMINE_EP_STATUS_ENTRY FOREIGN KEY (MAP_ID) REFERENCES redmine_status_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_to_crm_status_map_entry ADD CONSTRAINT FK_RDMINE_TO_CRM_BACKWARD_STATUS FOREIGN KEY (LOCAL_status_id) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE redmine_to_crm_status_map_entry ADD CONSTRAINT FK_RDMINE_TO_CRM_EP_STATUS_ENTRY FOREIGN KEY (MAP_ID) REFERENCES redmine_status_map (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE redmine_status_map_entry ADD CONSTRAINT FK_RDMINE_TO_CRM_STATUS FOREIGN KEY (LOCAL_status_id) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE redmine_status_map_entry ADD CONSTRAINT FK_RDMINE_TO_OLD_CRM_STATUS FOREIGN KEY (LOCAL_previous_status_id) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE sys_config ADD CONSTRAINT FK_SYSCFG_OWNCOMPANY FOREIGN KEY (ownCompanyId) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE user_login ADD CONSTRAINT FK_ULOGIN_ASTATE FOREIGN KEY (astate) REFERENCES admin_state (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE user_login ADD CONSTRAINT FK_ULOGIN_PERSON FOREIGN KEY (personId) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_vroom ADD CONSTRAINT FK_VROOM_CASE FOREIGN KEY (CASE_ID) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE worker_entry ADD CONSTRAINT FK_WORKER_PE FOREIGN KEY (personId) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE worker_entry ADD CONSTRAINT FK_WORKER_PE_COMP FOREIGN KEY (companyId) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE worker_entry ADD CONSTRAINT FK_WORKER_PE_DEP FOREIGN KEY (dep_id) REFERENCES company_dep (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE worker_entry ADD CONSTRAINT FK_WORKER_POS FOREIGN KEY (positionId) REFERENCES worker_position (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE application ADD CONSTRAINT application_dev_unit_fk FOREIGN KEY (dev_unit_id) REFERENCES dev_unit (ID) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE application ADD CONSTRAINT application_server_fk FOREIGN KEY (server_id) REFERENCES server (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE case_filter ADD CONSTRAINT case_filter_login_id_fk FOREIGN KEY (login_id) REFERENCES user_login (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE case_link ADD CONSTRAINT case_link_case_id_fk FOREIGN KEY (case_id) REFERENCES case_object (ID) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE case_object_tag ADD CONSTRAINT case_object_tag_to_case_fk FOREIGN KEY (case_id) REFERENCES case_object (ID) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE case_object_tag ADD CONSTRAINT case_object_tag_to_tag_fk FOREIGN KEY (tag_id) REFERENCES case_tag (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE contract ADD CONSTRAINT `contract-case_object-id-fk` FOREIGN KEY (id) REFERENCES case_object (ID) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE decimal_number ADD CONSTRAINT decimal_number_entity_id_fk FOREIGN KEY (entity_id) REFERENCES equipment (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE document ADD CONSTRAINT document_approved_by_id_fk FOREIGN KEY (approved_by_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE document ADD CONSTRAINT document_contractor_id_fk FOREIGN KEY (contractor_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE document ADD CONSTRAINT document_equipment_id_fk FOREIGN KEY (equipment_id) REFERENCES equipment (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE document ADD CONSTRAINT document_registrar_id_fk FOREIGN KEY (registrar_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE document ADD CONSTRAINT documentation_type_id_fk FOREIGN KEY (type_id) REFERENCES document_type (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE employee_registration ADD CONSTRAINT `employee_registration-case_object-id-fk` FOREIGN KEY (id) REFERENCES case_object (ID) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE equipment ADD CONSTRAINT equipment_author_id_fk FOREIGN KEY (author_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE equipment ADD CONSTRAINT equipment_manager_id_fk FOREIGN KEY (manager_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE equipment ADD CONSTRAINT equipment_project_id_fk FOREIGN KEY (project_id) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE user_dashboard ADD CONSTRAINT fk_case_filter_id_to_case_filter FOREIGN KEY (case_filter_id) REFERENCES case_filter (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE platform ADD CONSTRAINT fk_case_id_to_case_object FOREIGN KEY (case_id) REFERENCES case_object (ID) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE case_object ADD CONSTRAINT fk_case_product FOREIGN KEY (product_id) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_object ADD CONSTRAINT fk_caseobj_initcomp FOREIGN KEY (initiator_company) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_tag ADD CONSTRAINT fk_company_case_tag FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company ADD CONSTRAINT fk_company_category FOREIGN KEY (category_id) REFERENCES company_category (id) ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE jira_company_group ADD CONSTRAINT fk_company_id FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE companysubscription ADD CONSTRAINT fk_company_subscription FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE company ADD CONSTRAINT fk_compgroup_smp FOREIGN KEY (groupId) REFERENCES company_group (id) ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE contract_date ADD CONSTRAINT fk_contract_id_to_contract FOREIGN KEY (contract_id) REFERENCES contract (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE devunitsubscription ADD CONSTRAINT fk_devunit_subscription FOREIGN KEY (dev_unit_id) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE document_member ADD CONSTRAINT fk_document_id_to_document FOREIGN KEY (document_id) REFERENCES document (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document ADD CONSTRAINT fk_document_project_id FOREIGN KEY (project_id) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE user_dashboard ADD CONSTRAINT fk_login_id_to_login FOREIGN KEY (login_id) REFERENCES user_login (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE contract ADD CONSTRAINT fk_organization_company FOREIGN KEY (organization_id) REFERENCES company (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE contract ADD CONSTRAINT fk_parent_contract FOREIGN KEY (parent_contract_id) REFERENCES contract (id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE case_tag ADD CONSTRAINT fk_person_case_tag FOREIGN KEY (person_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE document_member ADD CONSTRAINT fk_person_id_to_person FOREIGN KEY (person_id) REFERENCES person (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE person_absence ADD CONSTRAINT fk_personabs_creator FOREIGN KEY (creator_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE person_absence ADD CONSTRAINT fk_personabs_reason FOREIGN KEY (reason_id) REFERENCES absence_reason (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE person_absence ADD CONSTRAINT fk_personabsence FOREIGN KEY (person_id) REFERENCES person (id) ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE platform ADD CONSTRAINT fk_project_id_to_case_object FOREIGN KEY (project_id) REFERENCES case_object (ID) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE case_state_workflow_link ADD CONSTRAINT fk_state_from_to_case_state FOREIGN KEY (state_from) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE case_state_workflow_link ADD CONSTRAINT fk_state_to_to_case_state FOREIGN KEY (state_to) REFERENCES case_state (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE user_login ADD CONSTRAINT fk_ulogin_authtype FOREIGN KEY (authType) REFERENCES auth_type (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE user_case_assignment ADD CONSTRAINT fk_user_case_assignment_login_id_to_user_login FOREIGN KEY (login_id) REFERENCES user_login (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE case_state_workflow_link ADD CONSTRAINT fk_workflow_id_to_case_state_workflow FOREIGN KEY (workflow_id) REFERENCES case_state_workflow (id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE platform ADD CONSTRAINT platform_company_fk FOREIGN KEY (company_id) REFERENCES company (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE case_object ADD CONSTRAINT platform_id_to_platform_fk FOREIGN KEY (platform_id) REFERENCES platform (id) ON UPDATE NO ACTION ON DELETE SET NULL;
ALTER TABLE platform ADD CONSTRAINT platform_person_fk FOREIGN KEY (manager_id) REFERENCES person (id) ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE contract ADD CONSTRAINT project_id_to_case_object_fk FOREIGN KEY (project_id) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE project_to_product ADD CONSTRAINT project_to_product_product_id_fk FOREIGN KEY (product_id) REFERENCES dev_unit (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE project_to_product ADD CONSTRAINT project_to_product_project_id_fk FOREIGN KEY (project_id) REFERENCES case_object (ID) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE server ADD CONSTRAINT server_platform_fk FOREIGN KEY (platform_id) REFERENCES platform (id) ON UPDATE CASCADE ON DELETE CASCADE;
